name: Build and Publish Wheels

on:
  push:
    tags:
      - "v*.*.*"      # release tags
      - "v*.*.*-*"    # pre-release tags
env:
  # The name of the package to be published to PyPI and TestPyPI.
  PYPI_NAME: qc-permanent

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build wheels (${{ matrix.os }}, Python ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-14, windows-2022]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"  # Use latest Python to install cibuildwheel

      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel pytest uv

      - name: Set 64-bit architecture for cibuildwheel
        run: |
          echo "CIBW_ARCHS_LINUX=x86_64" >> $GITHUB_ENV
          echo "CIBW_ARCHS_MACOS=universal2" >> $GITHUB_ENV
          echo "CIBW_ARCHS_WINDOWS=64" >> $GITHUB_ENV

      - name: Set CIBW_BUILD Python version
        shell: bash
        run: echo "CIBW_BUILD=cp${PYTHON_VERSION//./}-*" >> $GITHUB_ENV
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}

      - name: Build and test wheels
        env:
          CIBW_BUILD_VERBOSITY: 2
          CIBW_PRERELEASE_PYTHONS: "false"
          CIBW_TEST_REQUIRES: pytest
          CIBW_USE_CMAKE: ${{ runner.os == 'Windows' && 1 || '' }}  # Only set on Windows
        run: python -m cibuildwheel --output-dir "wheelhouse"

      - name: Show built wheels
        shell: bash
        run: ls -lh wheelhouse/

      - name: Upload built wheels
        uses: actions/upload-artifact@v4
        with:
          name: qc-permanent-${{ matrix.os }}-py${{ matrix.python-version }}
          path: wheelhouse/*.whl



  publish-to-pypi:
    name: Publish Python distribution to PyPI
    # only publish to PyPI on tag pushes
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build_wheels
    runs-on: ubuntu-latest
    environment:
      name: pypi-release
      url: https://pypi.org/project/${{ env.PYPI_NAME }}
    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          path: dist/
          merge-multiple: true  # Merge all artifacts into the dist/ directory

      - name: Check dist contents
        run: |
          echo "Contents of dist:"
          ls -l dist/

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
